# ==============================================================================
#
# Parameter file for LE3_GC_PowerSpectrum Processing Function
#
# This parameter file has the following format:
# [Section.Subsection]
#    parameter_name = parameter_value
#
# Lines starting with # are considered comments and ignored
#
# '#' symbols following parameter definition are not comments
#  i.e. ' parameter = value # comment '  will cause an error
#
# NOTE: 
#   Parameter file for LE3_GC_PowerSpectrum  Version >= 1.0
#
# ============================================================



# ---------------------------------------------------------------------------- #
#               PARAMETERS FOR INPUT/OUTPUT - only STANDALONE MODE
# ---------------------------------------------------------------------------- #
[Path]

  # path to input folder relative to workdir [default workdir: installation folder]
  input  = Catalogs4LE3/

  # path to output folder relative to workdir [default workdir: installation folder]
  output = ${OUTPUT}

# ---------------------------------------------------------------------------- #
#                PARAMETERS FOR CATALOGS - only STANDALONE MODE
# ---------------------------------------------------------------------------- #
[Catalog]
  # unused, to be removed
  constant_depth = true
  # unused, to be removed
  nbar_tabulated = false

  [Catalog.Galaxy]
  # name of galaxy catalog file in input folder
  filename    = ${DATA}

  # name of fits table in catalog file [only fot FITS input]
  name        = CATALOG

  # Coordinate system
  # - ASCII input file: valid type
  #     CARTESIAN: x1, x2, x3
  #     EUQATORIAL: RA, Dec, r (radius, or distance)
  #     PSEUDO_EQUATORIAL: RA, Dec, redshift
  # - FITS input file: name of keyword with coordinate system name 
  #     (e.g. COORD)
  #
  coordinates = COORD

  # Angle units for EQUATORIAL/PSEUDO_EQUATORIAL coordinates
  # - ASCII file: valid type
  #     DEGREES
  #     RADIANS
  # - FITS input file: name of keyword with angle type
  #   (e.g. ANGLE)
  #
  angle_units = ANGLE

  # Catalog selection ID
  # ASCII file:
  #    any memo string
  # FITS file:
  #    name of keyword containg selecion info
  selection = 

  # Object coordinates: Column number (for ASCII) OR column name (for FITS)
  coord1      = RA
  coord2      = DEC
  coord3      = REDSHIFT

  # Object mean density: Column number (for ASCII) OR column name (for FITS)
  # ( huge number to disable)
  #
  density     = DENSITY

  # Object weight: Column number (for ASCII) OR column name (for FITS) 
  # ( huge number to disable)
  weight      = 999

  # Object mask: Column number (for ASCII) OR column name (for FITS)
  # mask is an additional weight; the product weight*mask is assigned
  # to each points
  # ( huge number to disable)
  #
  mask        = 999


  [Catalog.Random]
  # Random catalog is unnecessary for a simulation data in a periodic box
  # set use_random_catalog = false
  # This is only for DOAFFT estimator. Random is required for
  # Yamamoto estimators, YSCFFT and YBCFFT

  #
  filename    = ${RANDOM}

  # name of fits table in catalog file [only fot FITS input]
  name        = CATALOG

 # Coordinate system
  # - ASCII input file: valid type
  #     CARTESIAN: x1, x2, x3
  #     EUQATORIAL: RA, Dec, r (radius, or distance)
  #     PSEUDO_EQUATORIAL: RA, Dec, redshift
  # - FITS input file: name of keyword with coordinate system name 
  #     (e.g. COORD)
  #
  coordinates = COORD

  # Angle units for EQUATORIAL/PSEUDO_EQUATORIAL coordinates
  # - ASCII file: valid type
  #     DEGREES
  #     RADIANS
  # - FITS input file: name of keyword with angle type
  #   (e.g. ANGLE)
  #
  angle_units = ANGLE

  # Catalog selection ID
  # ASCII file:
  #    any memo string
  # FITS file:
  #    name of keyword containg selecion info
  selection = 


  # Object coordinates: Column number (for ASCII) OR column name (for FITS)
  coord1      = RA
  coord2      = DEC
  coord3      = REDSHIFT

  # Object mean density: Column number (for ASCII) OR column name (for FITS)
  # ( huge number to disable)
  #
  density     = DENSITY

  # Object weight: Column number (for ASCII) OR column name (for FITS) 
  # ( huge number to disable)
  weight      = 999

  # Object mask: Column number (for ASCII) OR column name (for FITS)
  # mask is an additional weight; the product weight*mask is assigned
  # to each points
  # ( huge number to disable)
  #
  mask        = 999


#------------------------------------------------------------------------------#
#             PARAMETERS FOR THE POWER SPECTRUM
#------------------------------------------------------------------------------#

[Pk]

  # Power spectrum estimator [DOAFFT, YBCFFT, YSCFFT]
  # DOAFFT: Distant-observer approximation. The line of sight is x3
  # YSCFFT: FFT-based Yamamoto estimator by Scoccimarro
  # YBCFFT: FFT-based Yamamoto estimator by Bianchi et al
  # YSCFFT and YBCFFT gives the same power spectrum quadrupole
  # YSCFFT provides approximate hexiadecapole with less RAM and computation
  #
  statistics = YBCFFT

  # Enable random catalog usage
  #
  use_random_catalog = true

  # Number of grid points on each direction
  #
  Nft = ${GRID}

  # Compute enclosing box from catalog [true,false]
  #
  compute_Lbox = ${CLBOX}

  # Lenght of the box (Mpc/h) in configuration space if box computing disabled
  #
  Lbox = ${LBOX}

  # Compute catalog center from catalog [true,false]
  #
  compute_catalog_center = true

  # provided catalog center if computing disabled. Ignored if computing enabled
  #
  catalog_center = 0 0 0

  # Type of k binning: [LIN, LOG]
  #
  type_of_binning = LIN

  # Linear k-bin_step shift to bin center [true, false]
  #   true:  the bins are [(i+0.5)*dk, (i + 1.5)*dk]
  #   false: the bins are [i*dk, (i+1)*dk] for i=0,1,2,...
  # where dk is the binwidth ndel_data
  #
  shift_to_bin_center = true

  # Number of log-spaced bins if binning LOG
  #
  N_log_bins = 10

  # output k_bin width in units of the fundamental frequency 2pi/Lbox
  # for the power spectrum
  ndel_data = 1

  # out k bin width in units of the fundamental frequency 2pi/Lbox)
  # for the window function
  ndel_window = 1

  # Number of mu-bins for 2D spectrum P(k,mu)
  #
  N_mu_bins = 100

  # Mass Assignment Schema to use:
  #  NGP = nearest grid point
  #  CIC = cloud in cell
  #  TSC = triangular shape cloud
  #
  mass_assignment_scheme = TSC

  # Correct for the MAS [true, false] --> almost always this should be (true)
  #   mass assignment scheme introduces a damping in the power spectrum
  #
  MAS_correction = true

  # Enable FKP weighting schema [true, false]
  # weight becomes weight*mask/(1 + density*Pest)
  #
  FKP_weight = true

  # Estimated power for FKP weights (Pest in the FKP weights), ignored if no weight
  #
  Pest = 20000.0

  # Subtract Poisson shot-noise correction [true, false]
  #
  SN_correction = true

  # Reduce aliasing error using interlacing field [true, false]
  #   finite number of grid points introduces aliasing, an increase in
  #   power spectrum at high k near Nyquist frequency makes power spectrum accurate
  #
  use_interlacing = true

  # prefix in euclid file name structure
  #
  output_prefix = obssys

  # Produce output ASCII file used to compare old code results [true/false]
  #
  legacyTXToutput = false


[nbar]
  # Nbar estimantion method
  # - CATALOG from random catalog
  # - DNDZ interpolation from dNdZ values from file
  # - TABULATED use mean density of catalog if available
  # - NONE disable mean density, even if available in catalog
  method = TABULATED
  # nbar grid side points
  Nft = 16

  compute_Lbox = true
  # value of Lbox if compute_Lbox=false
  Lbox = 0

  compute_catalog_center = true
  # value of catalog center if compute_catalog_center=false
  catalog_center = 0 0 0 
  # MAS for nbar grid
  mass_assignment_scheme = PCS
  # mean density grid smoothing radius in Mpc/h
  smoothing_radius = 10
  # filename only for DNDZ
  filename = none_file


# ---------------------------------------------------------------------------- #
#                   COSMOLOGICAL PARAMETERS FOR Z CONVERSION
# ---------------------------------------------------------------------------- #
# Parameters used to transform redshift to comoving distance
# d = Hubble*sqrt(om_matter*(1.0 + z)^3 + om_radiation*(1.0 + z)^4 +
#                 om_k*(1.0 + z)^2 + om_vac*(1.0 + z)^[3*(1 + w_eos)]) [1/h Mpc]


[Cosmology]

    cosmology_ID = default
    
    # Matter energy density parameter
    om_matter = 0.319

    # Vacuum energy density parameter
    om_vac = 0.681

    # Dark energy equation of state
    w_eos = -1.0

    # Radiation energy density parameter
    om_radiation = 0.0

    # Curvature energy density parameter
    om_k = 0.0

    # Hubble parameter in units of 100 km/s /(Mpc /h)
    # which must be 100 by definition
    Hubble = 100.0


    # Following cosmological paramters are not used for redshift -> distance

    # Baryon energy density parameter
    om_baryons = 0.049

    # Dimensionless Hubble parameter
    hubble = 0.67

    # Scalar index of primordial perturbations
    spectral_index = 0.96

    # Effective number of relativistic species
    N_eff = 3.03

    # Mass dipersion on sphers of 8 Mpc/h radius
    sigma8 = 0.83

    # CMB temperature
    Tcmb = 2.73
# ---------------------------------------------------------------------------- #
