** Working example of study of systematics **

In this example a set of 22 galaxy mock catalogs, defined on the SC8 footprint
(as generated by Ben Granett) is created from 22 pinocchio light cones. We use
here these configurations:

+ base
  base configuration: flux limited sample with Halpha flux (from model 3) >
  2e-16 erg/s/cm^2;
+ MWmit / MWunm
  Milky Way extinction, ideal mitigation: galaxies are selected according to
  their flux after MW extinction is applied. Here and below, the random is
  selected in the same way (mit) or constructed with a density that is constant
  across the sky and follows the (selected) data catalog;
+ lutbase
  base configuration with look-up table: galaxy catalogs are selected using the
  look-up table with no MW extinction, constant minimal noise and exposure time
  equal to 4 exposures;
+ exptimit / exptiunm
  lookup table with exposure time: galaxy catalogs are selected using the
  look-up table with no MW extinction, constant minimal noise and a realistic
  map of exposure time;
+ noisemit / noiseunm
  lookup table with noise: galaxy catalogs are selected using the look-up table
  with no MW extinction, a realistic noise map and exposure time equal to 4
  exposures;
+ lutmwmit / lutmwunm
  lookup table with MW extinction: galaxy catalogs are selected using the
  look-up table with MW extinction, constant minimal noise and exposure time
  equal to 4 exposures;
+ allutmit / allutunm
  lookup table with all systematics: galaxy catalogs are selected using the
  look-up table with MW extinction and realistic maps for noise and exposure
  time.

Selections use the following sel_input_*.py files (given in the Repo and copied
to the Selections/ directory by createProjectDirectoryTree.py):

+ sel_input_MWext: MW extinction;
+ sel_input_lut0:  lookup table with minimal noise, 4 exposures and no extinction;
+ sel_input_lutet: lookup table with minimal noise, exposure map and no extinction;
+ sel_input_lutns: lookup table with noise map, 4 exposures and no extinction;
+ sel_input_lutmw: lookup table with minimal noise, 4 exposures and extinction;
+ sel_input_lut2:  lookup table with noise map, exposure map and extinction.

The pipeline_22pin.sh script runs all the scripts that are needed to process the
mocks, the scripts for the estimators must be launched separately.

Input files differ only for the keywords:
  selection_data_tag   = None
  selection_random_tag = None
  apply_dataselection_to_random = False
The createInput_22pin.py, that should be in the Pipeline/ directory, uses the
script pipeline_22pin_template.sh in the Pipeline/Template/ directory to create
the needed input files.

After creating the galaxy catalogs, the base configuration requires the
following scripts: 
  python -u createRandom.py input_22pinbase
  python -u dndz.py input_22pinbase
  python -u writeCatalogs4LE3.py input_22pinbase
  python -u createPKScripts.py input_22pinbase
There is no need here to have more than one random. Similarly, the lutbase
configuration only requires the same random of the base configuration, plus the
creation of a selection for each catalog and the random.

Things are more complex for the other cases, where the unmitigated cases require
the production of a new random that follows the number density of the (selected)
data catalog.

** TO RUN THE EXAMPLE:

- copy createInput_22pin.py to the Pipeline/ directory,
- copy input_22pin_template.py to the 
- generate a Paper2/ directory tree with 
    python createProjectDirectoryTree.py Paper2
- run the pipeline_22pin.sh script

Please note that the script is written to run as a batch job in the amonra
machine in Trieste, with anaconda used to set up the environment.
